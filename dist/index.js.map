{"version":3,"file":"index.js","names":["EQUALS","EQ","GREATER","GT","GREATER_OR_EQUALS","GTE","LESS","LT","LESS_OR_EQUALS","LTE","NOT_EQUALS","NE","BETWEEN","AND","Consts","SQLObject","Conditions","args","arg","push","length","Disjunction","map","join","Conjunction","s","toString","Condition","column","operator","value","quoteTerm","quoteVal","Negation","InclusionOperator","inclusionType","Array","isArray","val","In","NotIn","GlobalNotIn","GlobalIn","Between","leftBoundary","rightBoundary","b","quoteBoundary","Operators","createCondition","Error","commonReplacer","console","error","Value","replace","Term","term","parts","split","Number","isFinite","SQLFunction","name","_curry_f","AggregateFunctions","count","countIf","any","anyLast","min","max","sum","sumIf","avg","avgIf","uniq","uniqCombined","uniqHLL12","uniqExact","groupArray","groupUniqArray","ArithmeticFunctions","plus","minus","multiply","divide","intDiv","intDivOrZero","modulo","negate","abs","TimeFunctions","toYear","toMonth","toDayOfMonth","toDayOfWeek","toHour","toMinute","toTime","toDate","toDateTime","toDateTime64","toStartOfDay","toStartOfMonth","toStartOfQuarter","toStartOfYear","toStartOfMinute","toStartOfFiveMinute","toStartOfHour","now","today","yesterday","IPAddrFunctions","toIPv4","toIPv6","IPv4NumToString","IPv4StringToNum","IPv4NumToStringClassC","IPv6NumToString","IPv6StringToNum","Raw","string","raw","Query","Select","tables","joins","conditions","having_conditions","preconditions","aggregations","select_list","order_expressions","request_totals","undefined","sampling","limits","limitbycolumns","fmt","columns","forEach","col","table","alias","Object","values","keys","type","condition","aggregateExpressions","a","number","offset","limit","expressions","e","c","from","prewhere","where","groupby","having","order_by","with_totals","sample","limitby","format","toUpperCase","filter","v","Queries","Utility","Shortcuts","And","Or","Eq","Ne","Gte","Lte","Lt","Gt","notIn","cast","thing","t","between","left","right","Dialect"],"sources":["../src/index.js"],"sourcesContent":["const EQUALS = \"=\";\r\nconst EQ = EQUALS;\r\nconst GREATER = \">\";\r\nconst GT = GREATER;\r\nconst GREATER_OR_EQUALS = \">=\";\r\nconst GTE = GREATER_OR_EQUALS;\r\nconst LESS = \"<\";\r\nconst LT = LESS;\r\nconst LESS_OR_EQUALS = \"<=\";\r\nconst LTE = LESS_OR_EQUALS;\r\nconst NOT_EQUALS = \"!=\";\r\nconst NE = NOT_EQUALS;\r\nconst BETWEEN = \"between\";\r\nconst AND = 'and'\r\n\r\nconst Consts = {\r\n  EQUALS,\r\n  GREATER,\r\n  GREATER_OR_EQUALS,\r\n  LESS,\r\n  LESS_OR_EQUALS,\r\n  NOT_EQUALS,\r\n  EQ,\r\n  GT,\r\n  GTE,\r\n  LT,\r\n  LTE,\r\n  NE,\r\n};\r\n\r\nclass SQLObject {\r\n}\r\n\r\nclass Conditions extends SQLObject {\r\n  constructor(...args) {\r\n    super();\r\n    this.args = args;\r\n  }\r\n\r\n  push(arg) {\r\n    this.args.push(arg);\r\n  }\r\n\r\n  get length() {\r\n    return this.args.length;\r\n  }\r\n}\r\n\r\nclass Disjunction extends Conditions {\r\n  constructor(...args) {\r\n    super(...args);\r\n  }\r\n\r\n  toString() {\r\n    return this.args.length ? this.args.map(arg => \"(\" + arg + \")\").join(\" or \") : \"\";\r\n  }\r\n}\r\n\r\nclass Conjunction extends Conditions {\r\n  constructor(...args) {\r\n    super(...args);\r\n  }\r\n\r\n  toString() {\r\n    if (!this.args.length) return \"\";\r\n\r\n    return this.args.map((arg) => {\r\n      const s = (arg.toString) ? arg.toString() : arg;\r\n      return \"(\" + s + \")\";\r\n    }).join(\" and \");\r\n  }\r\n}\r\n\r\nclass Condition extends SQLObject {\r\n  constructor(column, operator, value) {\r\n    super();\r\n    this.column = quoteTerm(column);\r\n    this.operator = operator;\r\n    this.value = (value instanceof SQLObject) ? value : quoteVal(value);\r\n  }\r\n\r\n  toString() {\r\n    if (this.operator) {\r\n      return [this.column, this.operator, this.value].join(' ');\r\n    } else {\r\n      return this.column;\r\n    }\r\n  }\r\n}\r\n\r\nclass Negation extends Condition {\r\n  constructor(column, operator, value) {\r\n    super(column, operator, value);\r\n  }\r\n\r\n  toString() {\r\n    return \"not(\" + super.toString() + \")\";\r\n  }\r\n}\r\n\r\nclass InclusionOperator extends Condition {\r\n  constructor(inclusionType, column, operator, value) {\r\n    super(column, operator, value);\r\n    this.operator = inclusionType;\r\n  }\r\n\r\n  toString() {\r\n    return [\r\n      quoteTerm(this.column),\r\n      \" \",\r\n      this.operator,\r\n      \" (\",\r\n      Array.isArray(this.value)\r\n        ? this.value.map(val => quoteVal(val)).join(',')\r\n        : this.value,\r\n      \")\"\r\n    ].join('');\r\n  }\r\n}\r\n\r\nclass In extends InclusionOperator {\r\n  constructor(...args) {\r\n    super(\"in\", ...args);\r\n  }\r\n}\r\n\r\nclass NotIn extends InclusionOperator {\r\n  constructor(...args) {\r\n    super(\"not in\", ...args);\r\n  }\r\n}\r\n\r\nclass GlobalNotIn extends InclusionOperator {\r\n  constructor(...args) {\r\n    super(\"global not in\", ...args);\r\n  }\r\n}\r\n\r\nclass GlobalIn extends InclusionOperator {\r\n  constructor(...args) {\r\n    super(\"global in\", ...args);\r\n  }\r\n}\r\n\r\nclass Between extends SQLObject {\r\n  constructor(column, leftBoundary, rightBoundary) {\r\n      super();\r\n      this.column = column;\r\n\r\n      this.leftBoundary = leftBoundary;\r\n      this.rightBoundary = rightBoundary;\r\n  }\r\n  quoteBoundary(b) {\r\n    return b instanceof SQLObject ? b.toString() : quoteVal(b);\r\n  }\r\n\r\n  toString() {\r\n    return [\r\n      quoteTerm(this.column),\r\n      \" \",\r\n      BETWEEN,\r\n      // because super class adding parents around value and I didn't find an elegant\r\n      // way how to avoid this. So I'm overloading toString() and copy-pasting implementation\r\n      this.quoteBoundary(this.leftBoundary),\r\n      AND,\r\n      this.quoteBoundary(this.rightBoundary)\r\n    ].join(' ');\r\n  }\r\n}\r\n\r\nconst Operators = {\r\n  Conjunction, Disjunction, Negation,\r\n  In, NotIn, GlobalIn, GlobalNotIn\r\n};\r\n\r\nfunction createCondition(...args) {\r\n  switch (args.length) {\r\n    case 1:\r\n      return args[0] instanceof Condition ? args[0] : new Condition(args[0]);\r\n    case 2:\r\n      return new Condition(args[0], EQUALS, args[1]);\r\n    case 3:\r\n      return new Condition(...args);\r\n    default:\r\n      throw new Error(\"Invalid condition args: \", args);\r\n  }\r\n}\r\n\r\nlet commonReplacer = [\r\n  /[\\0\\n\\r\\b\\t\\\\\\x1a]/g, (s) => {\r\n    switch (s) {\r\n      case \"\\0\":\r\n        return \"\\\\0\";\r\n      case \"\\n\":\r\n        return \"\\\\n\";\r\n      case \"\\b\":\r\n        return \"\\\\b\";\r\n      case \"\\r\":\r\n        return \"\\\\r\";\r\n      case \"\\t\":\r\n        return \"\\\\t\";\r\n      case \"\\\\\":\r\n        return \"\\\\\\\\\";\r\n      case \"\\x1a\" :\r\n        return \"\\\\Z\";\r\n      default:\r\n        console.error(\"uncovered case in replacer:\", s); return ''; //logic error\r\n    }\r\n  }\r\n];\r\n\r\nclass Value extends SQLObject {\r\n  constructor(value) {\r\n    super();\r\n    this.value = value;\r\n  }\r\n\r\n  toString() {\r\n    if (typeof this.value === \"string\") {\r\n      return \"'\" + this.value.replace(...commonReplacer).replace(/'/g, \"''\") + \"'\";\r\n    }\r\n    if (typeof this.value === 'undefined') {\r\n      return \"''\";\r\n    }\r\n\r\n    if (Array.isArray(this.value)) {\r\n      return this.value.map(val => new Value(val)).join();\r\n    }\r\n\r\n    return this.value + '';\r\n  }\r\n}\r\n\r\nclass Term extends SQLObject {\r\n  constructor(term) {\r\n    super();\r\n    this.term = term;\r\n  }\r\n\r\n  toString() {\r\n    const parts = this.term.split('.');\r\n    if (parts.length > 1) {\r\n      return [new Term(parts[0]).toString(), new Term(parts[1]).toString()].join('.');\r\n    }\r\n\r\n    return '`' + this.term.replace(...commonReplacer).replace(/`/g, '\\\\`') + '`';\r\n  }\r\n}\r\n\r\nfunction quoteVal(value) {\r\n  return value instanceof SQLObject ? value : new Value(value);\r\n}\r\n\r\nfunction quoteTerm(term) {\r\n  return term instanceof SQLObject || Number.isFinite(term) ? term : new Term(term);\r\n}\r\n\r\n\r\nclass SQLFunction extends SQLObject {\r\n  constructor(name, ...args) {\r\n    super();\r\n    this.name = name;\r\n    this.args = args;\r\n  }\r\n\r\n  toString() {\r\n    return this.name +\r\n      \"(\" +\r\n      this.args.map((arg) => arg instanceof SQLObject || Number.isFinite(arg) ? arg : quoteTerm(arg)).join() +\r\n      \")\";\r\n  }\r\n}\r\n\r\nconst _curry_f = (name) => {\r\n  return (...args) => new SQLFunction(name, ...args)\r\n};\r\n\r\nconst AggregateFunctions = {\r\n  count: _curry_f('count'),\r\n  countIf: _curry_f('countIf'),\r\n  any: _curry_f('any'),\r\n  anyLast: _curry_f('anyLast'),\r\n  min: _curry_f('min'),\r\n  max: _curry_f('max'),\r\n  sum: _curry_f('sum'),\r\n  sumIf: _curry_f('sumIf'),\r\n  avg: _curry_f('avg'),\r\n  avgIf: _curry_f('avgIf'),\r\n  uniq: _curry_f('uniq'),\r\n  uniqCombined: _curry_f('uniqCombined'),\r\n  uniqHLL12: _curry_f('uniqHLL12'),\r\n  uniqExact: _curry_f('uniqExact'),\r\n  groupArray: _curry_f('groupArray'),\r\n  groupUniqArray: _curry_f('groupUniqArray')\r\n};\r\n\r\nconst ArithmeticFunctions = {\r\n  plus: _curry_f('plus'),\r\n  minus: _curry_f('minus'),\r\n  multiply: _curry_f('multiply'),\r\n  divide: _curry_f('divide'),\r\n  intDiv: _curry_f('intDiv'),\r\n  intDivOrZero: _curry_f('intDivOrZero'),\r\n  modulo: _curry_f('modulo'),\r\n  negate: _curry_f('negate'),\r\n  abs: _curry_f('abs')\r\n};\r\n\r\nconst TimeFunctions = {\r\n  toYear: _curry_f('toYear'),\r\n  toMonth: _curry_f('toMonth'),\r\n  toDayOfMonth: _curry_f('toDayOfMonth'),\r\n  toDayOfWeek: _curry_f('toDayOfWeek'),\r\n  toHour: _curry_f('toHour'),\r\n  toMinute: _curry_f('toMinute'),\r\n  toTime: _curry_f('toTime'),\r\n  toDate: _curry_f('toDate'),\r\n  toDateTime: _curry_f('toDateTime'),\r\n  toDateTime64: _curry_f('toDateTime64'),\r\n  toStartOfDay: _curry_f('toStartOfDay'),\r\n  toStartOfMonth: _curry_f('toStartOfMonth'),\r\n  toStartOfQuarter: _curry_f('toStartOfQuarter'),\r\n  toStartOfYear: _curry_f('toStartOfYear'),\r\n  toStartOfMinute: _curry_f('toStartOfMinute'),\r\n  toStartOfFiveMinute: _curry_f('toStartOfFiveMinute'),\r\n  toStartOfHour: _curry_f('toStartOfHour'),\r\n\r\n  now: _curry_f('now'),\r\n  today: _curry_f('today'),\r\n  yesterday: _curry_f('yesterday')\r\n};\r\n\r\nconst IPAddrFunctions = {\r\n  toIPv4: _curry_f('toIPv4'),\r\n  toIPv6: _curry_f('toIPv6'),\r\n  IPv4NumToString: _curry_f('IPv4NumToString'),\r\n  IPv4StringToNum: _curry_f('IPv4StringToNum'),\r\n  IPv4NumToStringClassC: _curry_f('IPv4NumToStringClassC'),\r\n  IPv6NumToString: _curry_f('IPv6NumToString'),\r\n  IPv6StringToNum: _curry_f('IPv6StringToNum')\r\n};\r\n\r\nclass Raw extends SQLObject {\r\n  constructor(string) {\r\n    super();\r\n    this.raw = string;\r\n  }\r\n\r\n  toString() {\r\n    return this.raw;\r\n  }\r\n}\r\n\r\nclass Query extends SQLObject {\r\n}\r\n\r\nclass Select extends Query {\r\n  constructor() {\r\n    super();\r\n\r\n    this.tables = [];\r\n    this.joins = [];\r\n    this.conditions = new Conjunction();\r\n    this.having_conditions = new Conjunction();\r\n    this.preconditions = new Conjunction();\r\n    this.aggregations = [];\r\n    this.select_list = [];\r\n    this.order_expressions = [];\r\n    this.request_totals = undefined;\r\n    this.sampling = undefined;\r\n    this.limits = undefined;\r\n    this.limitbycolumns = undefined;\r\n    this.fmt = undefined;\r\n  }\r\n\r\n  select(...columns) {\r\n    if (columns.length === 0) {\r\n      return this.select_list;\r\n    }\r\n\r\n    columns.forEach((col) => this.select_list.push(col));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @usage\r\n   *  q = selectBuilder->from('table0', ['table1', 'alias1'], { 'table2' : 'alias2'})->toString()\r\n   *  assertEquals(q, \"select * from table0, table1 as alias1, table2 as alias2\");\r\n   *\r\n   * @param tables\r\n   * @return {Select|Array}\r\n   */\r\n  from(...tables) {\r\n    if (!tables.length) {\r\n      return this.tables;\r\n    }\r\n\r\n    tables = tables.map(table => {\r\n      if (typeof table === \"string\") return [quoteTerm(table)];\r\n      if (Array.isArray(table)) {\r\n        if (table[0] instanceof Select) table[0] = '(' + table[0].toString() + ')';\r\n        else table[0] = quoteTerm(table[0]);\r\n        table[1] = quoteTerm(table[1]);\r\n        return table;\r\n      }\r\n      if (table instanceof Select) return ['(' + table.toString() + ')'];\r\n\r\n      let alias = Object.values(table)[0];\r\n      if (alias instanceof Select) alias = '(' + alias.toString() + ')';\r\n      else alias = quoteTerm(alias);\r\n\r\n      return [alias, quoteTerm(Object.keys(table)[0])];\r\n    });\r\n\r\n    this.tables = tables;\r\n    return this;\r\n  }\r\n\r\n  join(table, type, ...conditions) {\r\n    if (typeof table === \"string\") table = quoteTerm(table);\r\n\r\n    if (!Array.isArray(conditions)) {\r\n      conditions = [conditions];\r\n    }\r\n\r\n    if (conditions.length > 1) {\r\n      conditions = Conjunction(conditions);\r\n    }\r\n\r\n    this.joins.push({ table, type, conditions });\r\n    return this;\r\n  }\r\n\r\n  prewhere(...args) {\r\n    this.preconditions.push(createCondition(...args));\r\n    return this;\r\n  }\r\n\r\n  orPrewhere(...args) {\r\n    let condition = createCondition(...args);\r\n    if (this.preconditions.length) {\r\n      this.preconditions = new Disjunction(this.preconditions, condition)\r\n    } else {\r\n      this.preconditions.push(condition)\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  where(...args) {\r\n    if (args.length === 1 && args[0] instanceof Condition) {\r\n      this.conditions.push(args[0]);\r\n    } else {\r\n      this.conditions.push(createCondition(...args));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  orWhere(...args) {\r\n    let condition = createCondition(...args);\r\n    if (this.conditions.length) {\r\n      this.conditions = new Disjunction(this.conditions, condition)\r\n    } else {\r\n      this.conditions.push(condition);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  groupBy(...aggregateExpressions) {\r\n    aggregateExpressions.forEach(a => this.aggregations.push(a));\r\n    return this;\r\n  }\r\n\r\n  withTotals(request_totals = true) {\r\n    this.request_totals = request_totals;\r\n    return this;\r\n  }\r\n\r\n  limit(number, offset) {\r\n    this.limits = {\r\n      number, offset\r\n    };\r\n    return this;\r\n  }\r\n\r\n  limitBy(limit, ...columns) {\r\n    this.limitbycolumns = {\r\n      limit, columns\r\n    };\r\n    return this;\r\n  }\r\n\r\n  orderBy(...expressions) {\r\n    expressions.forEach(e => this.order_expressions.push(e));\r\n    return this;\r\n  }\r\n\r\n  format(fmt) {\r\n    this.fmt = fmt;\r\n    return this;\r\n  }\r\n\r\n  toString() {\r\n    let select_list;\r\n    if (this.select_list.length === 0) {\r\n      select_list = \"*\";\r\n    } else {\r\n      select_list = this.select_list.map(\r\n        c => Array.isArray(c)\r\n          ? quoteTerm(c[0]) + ' as ' + quoteTerm(c[1])\r\n          : quoteTerm(c)\r\n      ).join();\r\n    }\r\n\r\n    let from = this.from().map(\r\n      (table) =>\r\n        table.length === 1\r\n          ? table[0]\r\n          : table[0] + ' as ' + table[1]\r\n    );\r\n    from = from.length ? \"from \" + from.join() : \"\";\r\n\r\n    let join = this.joins.map((join) => {\r\n      return ((join.type) ? join.type + ' ' : '') + 'join ' + join.table + ' on ' + join.conditions;\r\n    }).join(' ');\r\n\r\n    let prewhere = this.preconditions.length ? \"prewhere \" + this.preconditions : \"\";\r\n    let where = this.conditions.length ? \"where \" + this.conditions : \"\";\r\n\r\n    let groupby = this.aggregations.length\r\n      ? \"group by \" + this.aggregations.map(c => quoteTerm(c)).join()\r\n      : \"\";\r\n\r\n    let having = this.having_conditions.length ? \"having \" + this.having_conditions : \"\";\r\n\r\n    let order_by = this.order_expressions.length\r\n      ? \"order by \" + this.order_expressions.map(e => Array.isArray(e) ? quoteTerm(e[0]) + \" \" + e[1] : quoteTerm(e)).join()\r\n      : \"\";\r\n\r\n    let with_totals = this.request_totals ? \"with totals\" : \"\";\r\n    let sample = this.sampling ? \"sample \" + this.sampling : \"\";\r\n\r\n    let limitby = this.limitbycolumns && this.limitbycolumns.columns.length\r\n      ? \"limit \" + this.limitbycolumns.limit + \" by \" + this.limitbycolumns.columns.map(c => quoteTerm(c)).join()\r\n      : '';\r\n\r\n\r\n    let limit = this.limits\r\n      ? \"limit \" + ((typeof this.limits.offset === \"undefined\") ? this.limits.number : this.limits.offset + \", \" + this.limits.number)\r\n      : '';\r\n\r\n    let format = this.fmt\r\n      ? \" format \" + this.fmt.toUpperCase()\r\n      : \"\";\r\n\r\n    const parts = [\r\n      \"select\",\r\n      select_list,\r\n      from,\r\n      join,\r\n      sample,\r\n      prewhere,\r\n      where,\r\n      groupby,\r\n      with_totals,\r\n      having,\r\n      order_by,\r\n      limitby,\r\n      limit,\r\n      format,\r\n    ].filter((v) => v != '');\r\n\r\n    return parts.join(' ');\r\n  }\r\n}\r\n\r\n\r\nconst Queries = {\r\n  Select\r\n};\r\n\r\n\r\nconst Utility = {\r\n  quoteVal, val: quoteVal,\r\n  quoteTerm, term: quoteTerm,\r\n  raw: (s) => new Raw(s),\r\n  Condition: (...args) => new Condition(...args),\r\n};\r\n\r\n\r\nconst Shortcuts = {\r\n  And: (...args) => new Conjunction(...args),\r\n  Or: (...args) => new Disjunction(...args),\r\n  Eq: (col, val) => new Condition(col, Consts.EQ, val),\r\n  Ne: (col, val) => new Condition(col, Consts.NE, val),\r\n  Gte: (col, val) => new Condition(col, Consts.GTE, val),\r\n  Lte: (col, val) => new Condition(col, Consts.LTE, val),\r\n  Lt: (col, val) => new Condition(col, Consts.LT, val),\r\n  Gt: (col, val) => new Condition(col, Consts.GT, val),\r\n  in: (col, values) => new In(col, null, values),\r\n  notIn: (col, values) => new NotIn(col, null, values),\r\n  cast: (thing, t) => new SQLFunction('cast', thing, quoteVal(t)),\r\n  between: (col, left, right) => new Between(col, left, right)\r\n};\r\n\r\n\r\nconst Dialect = {\r\n  ...Operators,\r\n  ...AggregateFunctions,\r\n  ...ArithmeticFunctions,\r\n  ...TimeFunctions,\r\n  ...IPAddrFunctions,\r\n  ...Consts,\r\n  ...Queries,\r\n  ...Utility,\r\n  ...Shortcuts,\r\n};\r\nexport default Dialect;\r\n"],"mappings":"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"}